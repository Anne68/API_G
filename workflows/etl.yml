name: ETL Games (API + Scraping)

on:
  workflow_dispatch: {}            # bouton "Run workflow"
  schedule:
    # Exécution quotidienne à 07:00 Europe/Paris (UTC = 05:00)
    - cron: "0 5 * * *"

jobs:
  run-etl:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build .env from secrets
        run: |
          {
            echo "RAWG_API_KEY=${{ secrets.RAWG_API_KEY }}"
            echo "DB_USER=${{ secrets.DB_USER }}"
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}"
            echo "DB_HOST=${{ secrets.DB_HOST }}"
            echo "DB_PORT=${{ secrets.DB_PORT }}"
            echo "DB_NAME=${{ secrets.DB_NAME }}"
            echo "DB_TABLE=${{ secrets.DB_TABLE }}"
            echo "LOG_LEVEL=INFO"
            echo "HTTP_TIMEOUT=20"
            echo "HTTP_RETRIES=3"
            echo "SCRAPE_ENABLED=${{ secrets.SCRAPE_ENABLED }}"
            echo "SCRAPE_CONFIG=scrape_sources.json"
          } > .env

      - name: (Option) Écrire scrape_sources.json depuis un secret
        if: ${{ secrets.SCRAPE_CONFIG_JSON != '' }}
        run: |
          echo '${{ secrets.SCRAPE_CONFIG_JSON }}' > scrape_sources.json

      - name: Run ETL (50 derniers jeux + update)
        run: |
          python etl_games.py --limit 50

      - name: Upload log (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: etl-logs
          path: etl_games.log
          if-no-files-found: ignore
